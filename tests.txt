
# Unit Tests:
1. "multiplication" function: returns the product of the two input numbers.
    Expect multiplication(2,5) to be a number
    Expect multiplication(2,5) to be equal to 10
    Expect multiplication(4,3) to be equal to 4 + 4 + 4
    Expect multiplication("someStr",3) to be an error
    Expect multiplication(0,5) to be equal to 0
    Expect multiplication(x,0) to be equal to 0
    Expect multiplication(1,4) to be equal to 4
    Expect multiplication(1,y) to be equal to y
    Expect multiplication(m,n) to be equal to n * m

2. "concatOdds" function: takes two arrays of integers as arguments and returns 
a single array that only contains the odd numbers, in ascending order, from both 
of the arrays.
    Expect concatOdds([4,1,8,2,26,15],[-3,7,6]) to be an array
    Expect concatOdds([4,1,8,2,26,15],[-3,7,6]) to be equal to [-3,1,7,15]
    Expect concatOdds(["x",1,8,2,26,15],[-3,7,6]) to be an error
    Expect concatOdds([4,1,8,2,26,15],[-3,"y",6]) to be an error
    Expect concatOdds([3.2,1,8,2,26,15],[-3,7,6]) to be an error
    Expect resultingArray = concatOdds([2,5,3,5],[3,8,1]) to satisfy 
           resultingArray[index + 1] < resultingArray [index] for each index < resultingArray.length
    Expect concatOdds([2,5,3,5],[3,8,1]) to be equal to [1,3,5]




